services:
  steampipe:
    build:
      context: ./steampipe
      args:
        STEAMPIPE_VERSION: v2.2.0
        PRE_INSTALL_PLUGINS: "kubernetes"
    env_file:
      - .env
    environment:
        PGDATABASE: "steampipe"
        PGHOST: "127.0.0.1"
        PGPASSWORD: ${STEAMPIPE_DATABASE_PASSWORD-abcd123123}
        PGUSER: "steampipe"
        PGPORT: "9193"
    ports:
      - "9193:9193"
    networks:
      - turbot
    healthcheck:
      test: ["CMD-SHELL", "bash ./healthcheck.sh"]
      interval: 10s
      retries: 10
      start_period: 20s
      timeout: 5s
    volumes:
      - ~/.kube/config:/home/steampipe/.kube/config  # mount kubeconfig
      - ./steampipe/init-db.sql:/home/steampipe/initdb-sql-scripts/custom-functions.sql
    #   - ~/.aws/credentials:/home/steampipe/.aws/credentials  # mount aws credentials

  powerpipe:
    build:
      context: ./powerpipe
      args:
        POWERPIPE_VERSION: v1.4.1
        PRE_INSTALL_MODS: "github.com/turbot/steampipe-mod-kubernetes-insights github.com/turbot/steampipe-mod-kubernetes-compliance"
    env_file:
      - .env
    environment:
      POWERPIPE_DATABASE: postgres://steampipe:${STEAMPIPE_DATABASE_PASSWORD}@steampipe:9193/steampipe
    ports:
      - "9033:9033"
    depends_on:
      steampipe:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD-SHELL", "bash ./healthcheck.sh"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s
    networks:
      - turbot


networks:
  turbot:
    driver: bridge