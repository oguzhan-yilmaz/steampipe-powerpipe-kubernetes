global:
  steampipeDatabasePassword: "abcd1234"

powerpipe:
  secretEnvVars: {}

  envVars:
    INSTALL_PLUGINS: "steampipe kubernetes aws"

  replicaCount: 1
  containerPort: 9033
  image:
    repository: ghcr.io/oguzhan-yilmaz/steampipe-powerpipe-kubernetes--powerpipe
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main"

  imagePullSecrets: []
  nameOverride: "powerpipe"
  fullnameOverride: "powerpipe"

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:    
    fsGroup: 1234


  securityContext:
    runAsUser: 1234
    runAsGroup: 1234
    runAsNonRoot: true

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


steampipe:
  secretEnvVars:
    SECRET_ENV_VAR: "123"

  envVars:
    INSTALL_PLUGINS: "steampipe kubernetes aws"

  secretConfig:
    KUBECONFIG: 
      path: ""
      content: |
        example kubeconfig
    AWS_CREDENTIALS: 
      path: ""
      content: |
        [profile default]
        a = ......
        b = ......

  config:
    # will be mounted to ./steampipe/config/ -- file name==key name
    aws.spc: |
      connection "aws_account_a" {
        plugin  = "aws"
        profile = "account_a"
        regions = ["us-east-1", "us-west-2"]
      }

      connection "aws_account_b" {
        plugin  = "aws"
        profile = "account_b"
        regions = ["ap-southeast-1", "ap-southeast-2"]
      }
    gcp.spc: |
      connection "gcp_my_other_project" {
        plugin      = "gcp"
        project     = "my-other-project"
        credentials = "/home/me/my-service-account-creds.json"
      }
    kubernetes.spc: |
      connection "kubernetes" {
        plugin         = "kubernetes"
        config_path    = "~/.kube/config"
        config_context = "myCluster"
        source_types   = ["deployed"]
      }


  replicaCount: 1
  containerPort: 9193
  image:
    repository: ghcr.io/oguzhan-yilmaz/steampipe-powerpipe-kubernetes--steampipe
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main"
  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  imagePullSecrets: []
  nameOverride: "steampipe"
  fullnameOverride: "steampipe"

  podAnnotations: {}

  podSecurityContext:    
    fsGroup: 1234


  securityContext:
    runAsUser: 1234
    runAsGroup: 1234
    runAsNonRoot: true

  service:
    type: ClusterIP
    port: 9193

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}
