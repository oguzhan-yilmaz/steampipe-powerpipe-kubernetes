apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: steampipe-powerpipe
  namespace: argocd
  # finalizers:
  #   - resources-finalizer.argocd.argoproj.io
  labels:
    name: steampipe-powerpipe

spec:
  project: default

  source:
    repoURL: https://oguzhan-yilmaz.github.io/steampipe-powerpipe-kubernetes/
    targetRevision: '*.*.*' 


    chart: steampipe-powerpipe-kubernetes
    helm:
      releaseName: steampipe-powerpipe


      # Uncomment below to enable powerpipe-mod-kubernetes-vpa-right-sizing support
      # valuesFiles:
      #   - powerpipe-mod-kubernetes-vpa-right-sizing.values.yaml


      # # Values file as block file. This takes precedence over values
      valuesObject:
        global:
          # steampipeDatabasePassword will be used to set the Steampipe DB password
          # and powerpipe DB Connection URL will get this value from here 
          steampipeDatabasePassword: "1pjVZE4bYBkIGWpNTOgl"

          # Enable to have Read Only access to the deployed cluster
          steampipeCreateReadOnlyServiceAccount: true


        steampipe:
          # Additional Secret Env Vars for steampipe
          secretEnvVars: {}

          # Define non-secret Env Vars for steampipe
          envVars:
            # INSTALL_PLUGINS will install steampipe plugins at runtime.
            #   Note: INSTALL_PLUGINS env. var. should be space separated
            # Take look at available plugins: https://hub.steampipe.io/
            # INSTALL_PLUGINS: "steampipe kubernetes aws"

            # following yaml syntax (>) will merge newlines with spaces
            INSTALL_PLUGINS: >
              steampipe
              kubernetes
            
            # set the default aws profile if you are passing aws credentials, or use .spc files
            # AWS_PROFILE: "default" 


          # secretCredentials will create Secret and
          # will put the file content to  '~/{directory}/{filename}'
          # useful for passing aws, gcp, kubeconfig credentials
          secretCredentials: {}
            # - name: kubeconfig  
            #   directory: ".kube"
            #   filename: "config"
            #   content: |
            #     example kubeconfig
            # - name: aws-credentials
            #   filename: credentials
            #   directory: ".aws"
            #   content: |
            #     [default]
            #     aws_access_key_id = AKIA6.........
            #     aws_secret_access_key = vBXPp..................
            #     region = eu-west-1


          # .config is used to create a ConfigMap
          # and will be mounted to ~/.steampipe/config/{key} â€” the filename being the key  
          # use it to configure steampipe: https://steampipe.io/docs/reference/config-files/overview
          config: {}
            # aws.spc: |
            #   connection "aws_account_a" {
            #     plugin  = "aws"
            #     profile = "default"
            #     regions = ["us-*", "eu-*"]
            #   }

            #   connection "aws_account_b" {
            #     plugin  = "aws"
            #     profile = "another_profile"
            #     regions = ["ap-southeast-1", "ap-southeast-2"]
            #   }
            # gcp.spc: |
            #   connection "gcp_my_other_project" {
            #     plugin      = "gcp"
            #     project     = "my-other-project"
            #     credentials = "/home/me/my-service-account-creds.json"
            #   }
            # kubernetes.spc: |
            #   connection "kubernetes" {
            #     plugin         = "kubernetes"
            #     config_path    = "~/.kube/config"
            #     config_context = "myCluster"
            #     source_types   = ["deployed"]
            #   }

          resources: {}
            # We usually recommend not to specify default resources and to leave this as a conscious
            # choice for the user. This also increases chances charts run on environments with little
            # resources, such as Minikube. If you do want to specify resources, uncomment the following
            # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
            # limits:
            #   cpu: 100m
            #   memory: 128Mi
            # requests:
            #   cpu: 100m
            #   memory: 128Mi

        powerpipe:
          secretEnvVars: {}

          # installMods will install Powerpipe modes at runtime
          # Take look at available mods: https://hub.powerpipe.io/ 
          installMods: 
            - github.com/turbot/steampipe-mod-kubernetes-insights
            - github.com/turbot/steampipe-mod-kubernetes-compliance


          resources: {}
            # We usually recommend not to specify default resources and to leave this as a conscious
            # choice for the user. This also increases chances charts run on environments with little
            # resources, such as Minikube. If you do want to specify resources, uncomment the following
            # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
            # limits:
            #   cpu: 100m
            #   memory: 128Mi
            # requests:
            #   cpu: 100m
            #   memory: 128Mi
  # Destination cluster and namespace to deploy the application
  destination:
    name: in-cluster
    namespace: turbot

  # Extra information to show in the Argo CD Application details tab
  info:
    - name: 'Github Repo'
      value: 'https://github.com/oguzhan-yilmaz/steampipe-powerpipe-kubernetes'

  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
    syncOptions:     # Sync options which modifies sync behavior
    - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
    - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
    - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
    - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
    - ApplyOutOfSyncOnly=true # Only sync out-of-sync resources, rather than applying every object in the application

  revisionHistoryLimit: 5